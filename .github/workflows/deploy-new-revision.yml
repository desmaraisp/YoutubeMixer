name: Deploy New Revision

on:
  push:
    branches:
    - main
    paths-ignore:
      - .github/workflows/gcr-cleaner.yml
      - "**/*.md"
      - LICENSE

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read  # This is required for actions/checkout

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v1'
      with:
        workload_identity_provider: ${{vars.WorkloadIDProvider}}
        service_account: ${{vars.GCPServiceAccount}}

    - name: 'Set up Cloud SDK'
      uses: 'google-github-actions/setup-gcloud@v1'

    - name: Set env vars
      run: |
        echo "REGISTRY=us-central1-docker.pkg.dev/${{vars.GCPProjectID}}/main-registry/youtube-randomizer-main-release" >> $GITHUB_ENV
    - name: deploy-infra
      env:
        TF_VAR_ProjectID: ${{vars.GCPProjectID}}
      run: |
        terraform -chdir=terraform/main-deployment init
        terraform -chdir=terraform/main-deployment apply -auto-approve

    - name: build-docker
      run: |
        gcloud auth configure-docker us-central1-docker.pkg.dev
        docker build -t $REGISTRY:$GITHUB_SHA -t $REGISTRY:latest .
        docker push $REGISTRY --all-tags
    
    - name: deploy-revision
      env:
        GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
        GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
        SPOTIFY_CLIENT_ID: ${{ secrets.SPOTIFY_CLIENT_ID }}
        SPOTIFY_CLIENT_SECRET: ${{ secrets.SPOTIFY_CLIENT_SECRET }}
      run: |
        export Youtube_API_Key=$(terraform -chdir=terraform/main-deployment output -raw Youtube_API_Key)
        export SA_NAME=$(terraform -chdir=terraform/main-deployment output -raw SA_NAME)
        export IMAGE="$REGISTRY:$GITHUB_SHA"
        
        gcloud config set run/region us-central1
        envsubst < ./deployment/service.yaml > ./deployment/service.out.yaml
        gcloud run services replace ./deployment/service.out.yaml
        gcloud run services set-iam-policy youtube-randomizer-main-service ./deployment/policy.yaml
